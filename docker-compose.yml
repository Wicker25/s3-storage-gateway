version: '3'
services:
  nginx:
    build: ./docker/nginx
    volumes:
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - internal-network
    ports:
      - 9080:9080
    environment:
      AWS_ENDPOINT_URL: ${AWS_ENDPOINT_URL}
    entrypoint: /bin/wait-for-it.sh -t 0 minio:9000 -- /entrypoint.sh
    depends_on:
      - minio
  etcd:
    image: bitnami/etcd
    networks:
      - internal-network
    expose:
      - 2379
    environment:
      ALLOW_NONE_AUTHENTICATION: 'yes'
  minio:
    build: ./docker/minio
    volumes:
      - ./storage:/storage
    networks:
      - internal-network
    expose:
      - 9000
    environment:
      MINIO_ACCESS_KEY: ${ROOT_ACCESS_KEY}
      MINIO_SECRET_KEY: ${ROOT_SECRET_KEY}
      MINIO_ETCD_ENDPOINTS: http://etcd:2379
      MINIO_CACHE: 'on'
      MINIO_CACHE_DRIVES: /storage
      MINIO_CACHE_EXPIRY: 365
      MINIO_CACHE_EXCLUDE: '*.pdf'
      MINIO_CACHE_QUOTA: 100
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    entrypoint: /bin/wait-for-it.sh -t 0 etcd:2379 -- minio gateway s3
    depends_on:
      - etcd
  bootstrapper:
    build: ./docker/bootstrapper
    volumes:
      - ./configs:/configs
    networks:
      - internal-network
    environment:
      ROOT_ACCESS_KEY: ${ROOT_ACCESS_KEY}
      ROOT_SECRET_KEY: ${ROOT_SECRET_KEY}
      ACCESS_KEY_1: ${ACCESS_KEY_1}
      SECRET_KEY_1: ${SECRET_KEY_1}
      ACCESS_KEY_2: ${ACCESS_KEY_2}
      SECRET_KEY_2: ${SECRET_KEY_2}
      ACCESS_KEY_3: ${ACCESS_KEY_3}
      SECRET_KEY_3: ${SECRET_KEY_3}
      ACCESS_KEY_4: ${ACCESS_KEY_4}
      SECRET_KEY_4: ${SECRET_KEY_4}
      ACCESS_KEY_5: ${ACCESS_KEY_5}
      SECRET_KEY_5: ${SECRET_KEY_5}
    entrypoint: /bin/wait-for-it.sh -t 0 minio:9000 -- /entrypoint.sh
    depends_on:
      - minio
networks:
  internal-network:
    driver: bridge
volumes:
  storage:
